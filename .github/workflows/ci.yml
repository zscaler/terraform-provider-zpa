# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#

name: CI
on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Download Go Dependencies
      run: |
         go mod tidy && go mod vendor

    - name: Setup Go Tools
      run: make tools

    - name: Check Formatting
      run: make fmtcheck

    - name: Build
      run: |
        go build -v .

    - name: Vet Code
      run: make vet

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=60m
          only-new-issues: true

  # run acceptance tests
  ZPA-QA-Tenant01-Test:
    strategy:
      matrix:
        go-version: [1.19]
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
        id: go
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '>=0.13.x'
          terraform_wrapper: false

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Download Go Dependencies
        run: |
          go mod tidy && go mod vendor

      - name: Set ZPA QA Tenant01 Credentials
        env:
          ZPA_CLIENT_ID: ${{ secrets.ZPA_CLIENT_ID }}
          ZPA_CLIENT_SECRET: ${{ secrets.ZPA_CLIENT_SECRET }}
          ZPA_CUSTOMER_ID: ${{ secrets.ZPA_CUSTOMER_ID }}
          ZPA_CLOUD: ${{ secrets.ZPA_CLOUD }}
          TF_ACC: ${{ secrets.TF_ACC }}
        run: |
          go test -v -cover ./zpa -timeout 120m -parallel=4

  ZPA-QA-Tenant02-Test:
    strategy:
      matrix:
        go-version: [1.19]
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
        id: go
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '>=0.13.x'
          terraform_wrapper: false

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Download Go Dependencies
        run: |
          go mod tidy && go mod vendor

      - name: Set ZPA QA Tenant02 Credentials
        env:
          ZPA_CLIENT_ID: ${{ secrets.ZPA_CLIENT_ID }}
          ZPA_CLIENT_SECRET: ${{ secrets.ZPA_CLIENT_SECRET }}
          ZPA_CUSTOMER_ID: ${{ secrets.ZPA_CUSTOMER_ID }}
          ZPA_CLOUD: ${{ secrets.ZPA_CLOUD }}
          TF_ACC: ${{ secrets.TF_ACC }}
        run: |
          go test -v -cover ./zpa -timeout 120m -parallel=4
