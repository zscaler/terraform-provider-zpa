# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: CI
on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.

  schedule:
    - cron: '0 13 * * *'

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Download Go Dependencies
      run: |
        go mod vendor && go mod tidy
    - name: Build
      run: |
        go build -v .
  # run acceptance tests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'
      id: go

    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '>=0.13.x'
        terraform_wrapper: false

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Download Go Dependencies
      run: |
        go mod vendor && go mod tidy

    - name: TF acceptance tests
      env:
        TF_ACC: true
        ZPA_CLIENT_ID: ${{ secrets.ZPA_CLIENT_ID }}
        ZPA_CLIENT_SECRET: ${{ secrets.ZPA_CLIENT_SECRET }}
        ZPA_CUSTOMER_ID: ${{ secrets.ZPA_CUSTOMER_ID }}

        # Set whatever additional acceptance test env vars here. You can
        # optionally use data from your repository secrets using the
        # following syntax:
        # SOME_VAR: ${{ secrets.SOME_VAR }}
        # go test -v -cover ./zpa -v -parallel 30  -timeout 60m
      run: |
        go test -v -cover ./zpa -v -parallel 30 -timeout 60m

